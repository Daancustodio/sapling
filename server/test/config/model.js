// Generated by CoffeeScript 1.3.3
var Config, should;

require('../utils');

should = require('should');

Config = require('../../config/model').Config;

describe('Config', function() {
  describe('#new()', function() {
    var obj;
    obj = {
      accessToken: '12345',
      num: 12345,
      obj: {
        one: 1,
        two: '2'
      }
    };
    return it('should create a new config entity when the info is vaild', function(done) {
      return Config["new"]('akey', obj, function(err, c) {
        c.data.accessToken.should.equal('12345');
        c.data.num.should.equal(12345);
        c.data.obj.one.should.equal(1);
        c.data.obj.two.should.equal('2');
        return Config.get('akey', function(err, c) {
          should.not.exist(err);
          c.data.accessToken.should.equal('12345');
          c.data.num.should.equal(12345);
          c.data.obj.one.should.equal(1);
          c.data.obj.two.should.equal('2');
          return done();
        });
      });
    });
  });
  describe('#getOrInsert()', function() {
    var obj;
    obj = {
      prop: 'original'
    };
    return it('should get or insert a new config entity', function(done) {
      return Config.getOrInsert('akey', obj, function(err, c) {
        c.data.prop.should.equal('original');
        return Config.findByIdAndUpdate('akey', {
          data: {
            prop: 'changed'
          }
        }, function(err, cc) {
          cc.data.prop.should.equal('changed');
          return Config.getOrInsert('akey', obj, function(err, ccc) {
            should.not.exist(err);
            ccc.data.prop.should.equal('changed');
            return done();
          });
        });
      });
    });
  });
  return describe('#getOrInsert()', function() {});
});
